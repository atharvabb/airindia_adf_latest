{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "7x4-data-factory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DataLake_To_7x4_DataLaka')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ref_Json_Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Ds_Json_7X4_DataLake_File",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@pipeline().parameters.Lookup_Container",
										"type": "Expression"
									},
									"file": {
										"value": "@pipeline().parameters.Lookup_Filename",
										"type": "Expression"
									},
									"dir": {
										"value": "@pipeline().parameters.Lookup_Dir",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Ref_Json_Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Ref_Json_Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Switch1",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().file_type",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "file",
												"activities": [
													{
														"name": "Copy CSV DataLake",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "BinarySource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"deleteFilesAfterCompletion": false
																},
																"formatSettings": {
																	"type": "BinaryReadSettings"
																}
															},
															"sink": {
																"type": "BinarySink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "Ds_Binary_Upstream_File",
																"type": "DatasetReference",
																"parameters": {
																	"file": {
																		"value": "@item().Src_File_Name",
																		"type": "Expression"
																	},
																	"dir": "@item().Src_File_Dir",
																	"container": "@item().Src_File_Container"
																}
															}
														],
														"outputs": [
															{
																"referenceName": "Ds_Binary_7X4_Datalake_File",
																"type": "DatasetReference",
																"parameters": {
																	"container": "@item().Dump_Layer",
																	"file": "@item().Src_File_Name",
																	"dir": {
																		"value": "@concat(item().Sink_File_Dir,'/dw_load_date=',formatDateTime(utcNow(),'yyyy-MM-dd'))",
																		"type": "Expression"
																	}
																}
															}
														]
													}
												]
											},
											{
												"value": "api",
												"activities": [
													{
														"name": "Copy data1",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "JsonSource",
																"storeSettings": {
																	"type": "HttpReadSettings",
																	"requestMethod": "GET"
																},
																"formatSettings": {
																	"type": "JsonReadSettings"
																}
															},
															"sink": {
																"type": "JsonSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																},
																"formatSettings": {
																	"type": "JsonWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "Ds_Json_API_Upstream_File",
																"type": "DatasetReference",
																"parameters": {
																	"url": {
																		"value": "@pipeline().parameters.Api_link",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "Ds_Json_7X4_DataLake_File",
																"type": "DatasetReference",
																"parameters": {
																	"container": {
																		"value": "@item().Dump_Layer",
																		"type": "Expression"
																	},
																	"file": "@item().Src_File_Name",
																	"dir": "@concat(item().Sink_File_Dir,'/dw_load_date=',formatDateTime(utcNow(),'yyyy-MM-dd'))"
																}
															}
														]
													}
												]
											},
											{
												"value": "multifile",
												"activities": [
													{
														"name": "Copy Folder Level",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "BinarySource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"wildcardFolderPath": {
																		"value": "@item().Src_File_Dir",
																		"type": "Expression"
																	},
																	"wildcardFileName": "*",
																	"deleteFilesAfterCompletion": false
																},
																"formatSettings": {
																	"type": "BinaryReadSettings"
																}
															},
															"sink": {
																"type": "BinarySink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "Binary1",
																"type": "DatasetReference",
																"parameters": {
																	"container": "@item().Src_File_Container",
																	"dir": "@item().Src_File_Dir"
																}
															}
														],
														"outputs": [
															{
																"referenceName": "Ds_Binary_7X4_Datalake_Folder",
																"type": "DatasetReference",
																"parameters": {
																	"container": "@item().Dump_Layer",
																	"dir": "@concat(item().Sink_File_Dir,'/dw_load_date=',formatDateTime(utcNow(),'yyyy-MM-dd'))"
																}
															}
														]
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "Wait1",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 1
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Lookup_Container": {
						"type": "string",
						"defaultValue": "reference-files"
					},
					"Lookup_Dir": {
						"type": "string",
						"defaultValue": "."
					},
					"Lookup_Filename": {
						"type": "string",
						"defaultValue": "datalake_lkp.json"
					},
					"Api_link": {
						"type": "string",
						"defaultValue": "https://airlabs.co/api/v9/airlines/?api_key=3f4cd1d8-29bd-4f7e-b359-52a1292f2438"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Databricks_Notebook_Run')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Run Databricks Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/atharvaxa9@gmail.com/main/Main_Workflow",
							"baseParameters": {
								"Layer_Name": {
									"value": "@pipeline().parameters.Layer_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "7x4_databricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Layer_Name": {
						"type": "string",
						"defaultValue": "\"env_setup\""
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySql_onprem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`city`"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremise_SQL_To_Datalake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ref_Json_Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Ds_Json_7X4_DataLake_File",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@pipeline().parameters.Lookup_Container",
										"type": "Expression"
									},
									"file": {
										"value": "@pipeline().parameters.Lookup_Filename",
										"type": "Expression"
									},
									"dir": {
										"value": "@pipeline().parameters.Lookup_Dir",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Ref_Json_Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Ref_Json_Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "MySqlTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Ds_Parquet_7X4_Datalake",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@item().container_sink",
													"type": "Expression"
												},
												"dir": {
													"value": "@concat(item().directory_sink,'/dw_load_date=',formatDateTime(utcNow(),'yyyy-MM-dd'))",
													"type": "Expression"
												},
												"filename": "@item().filename_sink"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Lookup_Container": {
						"type": "string",
						"defaultValue": "reference-files"
					},
					"Lookup_Dir": {
						"type": "string",
						"defaultValue": "."
					},
					"Lookup_Filename": {
						"type": "string",
						"defaultValue": "Table_Source_ONPREM_SQL.json"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MySqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/End_To_End_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Upstream DataLake to DataLake",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataLake_To_7x4_DataLaka",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute SQL To DataLake",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Azure_SQL_To_Datalake",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "OnPrem SQL To Datalake",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "OnPremise_SQL_To_Datalake",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Execute Upstream DataLake to DataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute SQL To DataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "OnPrem SQL To Datalake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.Layer_Name",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Databricks_Notebook_Run",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Databricks_Notebook_Run",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Layer_Name": {
												"value": "@item()",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Layer_Name": {
						"type": "array",
						"defaultValue": [
							"ALL"
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/DataLake_To_7x4_DataLaka')]",
				"[concat(variables('factoryId'), '/pipelines/OnPremise_SQL_To_Datalake')]",
				"[concat(variables('factoryId'), '/pipelines/Databricks_Notebook_Run')]"
			]
		}
	]
}